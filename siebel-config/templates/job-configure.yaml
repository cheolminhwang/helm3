#Configure Siebel kubernetes yaml
---
apiVersion: batch/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Job
metadata:
  name: configure
  namespace: {{ .Release.Namespace }}
  labels: {{- include "siebel.labels" . | nindent 4 }}
    app.kubernetes.io/component: configure-job
  annotations:
    ## This is what defines this resource as a hook. Without this line, the job is considered part of the release
    "helm.sh/hook": post-install, pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  backoffLimit: 0
  template:
    spec:
      serviceAccountName: list-svc-sa
      containers:
        - image: {{ template "configure.image" . }}
          name: configure-siebel
          imagePullPolicy: {{ .Values.image.configure.imagePullPolicy | default "IfNotPresent" }}
          env:
            - name: LogLevel
              value: "INFO"
            - name: LogLocation
              value: /output/config_operator.log
          volumeMounts:
            - name: persist-storage
              mountPath: /output
              subPath: {{ .Release.Namespace | upper }}/CONFIG
            {{- $files := .Files }}
            {{- $root := . -}}
            {{- range $key, $value := .Files }}
            {{- if hasPrefix "paramconfig/" $key }}
            - name: {{ $key | trimPrefix "paramconfig/"  | trimSuffix ".yaml" | replace "_" "-" }}
              mountPath: /config/{{ $key | trimPrefix "paramconfig/" }}
              subPath: {{ $key | trimPrefix "paramconfig/" }}
            {{- end }}
            {{- end }}
          resources:
            limits:
              cpu: "0.5"
              memory: 2Gi
            requests:
              cpu: "0.1"
              memory: 500Mi
      initContainers:
        - name: fix-mount
          imagePullPolicy: {{ .Values.image.busybox.imagePullPolicy | default "IfNotPresent" }}
          image: {{ template "busybox.image" . }}
          command:
            - sh
            - -c
            - mkdir -p /work-dir/{{ .Release.Namespace | upper }}/CONFIG;
              chown -R 1000:1000 /work-dir/{{ .Release.Namespace | upper }}/CONFIG;
          volumeMounts:
          - name: persist-storage
            mountPath: "/work-dir"
        - name: wait4dbconn
          imagePullPolicy: {{ .Values.image.dbutils.imagePullPolicy | default "IfNotPresent" }}
          image: {{ template "dbutils.image" . }}
          env:
            - name: TNS_ADMIN
              value: "/tnsadmin"
            - name: dbUser
              valueFrom:
                configMapKeyRef:
                  name: siebel-common-config
                  key: DBUSER
            - name: dbPassword
              valueFrom:
                secretKeyRef:
                  name: siebel-secrets
                  key: DBUSERPASSWORD
            - name: tnsConnectString
              valueFrom:
                configMapKeyRef:
                  name: siebel-common-config
                  key: DBTNSALIAS
          volumeMounts:
            - name: tns-admin
              mountPath: /tnsadmin
        - name: configcheck-smc
          image: {{ template "utils.image" . }}
          volumeMounts:
          - name: keystore
            mountPath: /home/opc/keystore.jks
            subPath: keystore.jks
          command: ["/bin/sh"]
          args:
            - -c
            - >
              PASSWORD=siebel;
              JRE_HOME=$(readlink -f /usr/bin/java | sed "s:bin/java::");
              ${JRE_HOME}/bin/keytool -importkeystore -srckeystore /home/opc/keystore.jks  -destkeystore /home/opc/siebelkeystore.p12 -srcstoretype JKS -deststoretype PKCS12 -deststorepass ${PASSWORD} -new ${PASSWORD} -srcstorepass ${PASSWORD};
              echo \"Running Curl\";
              depstatusCode=0;
              while [ $depstatusCode -ne 200 ]; do
                depstatusCode=$(curl -ks -o /dev/null -w '%{http_code}' --cert-type P12 --cert /home/opc/siebelkeystore.p12:$PASSWORD https://smc-0.smc.{{ .Release.Namespace }}.svc.cluster.local:4430/siebel/smc/index.html);
                echo \"depstatusCode = \" $depstatusCode;
                sleep 10;
              done
        - name: configcheck-cgw
          image: {{ template "utils.image" . }}
          volumeMounts:
          - name: keystore
            mountPath: /home/opc/keystore.jks
            subPath: keystore.jks
          command: ["/bin/sh"]
          args:
            - -c
            - >
              PASSWORD=siebel;
              JRE_HOME=$(readlink -f /usr/bin/java | sed "s:bin/java::");
              ${JRE_HOME}/bin/keytool -importkeystore -srckeystore /home/opc/keystore.jks  -destkeystore /home/opc/siebelkeystore.p12 -srcstoretype JKS -deststoretype PKCS12 -deststorepass ${PASSWORD} -new ${PASSWORD} -srcstorepass ${PASSWORD};
              echo \"Running Curl\";
              i=0;
              end={{ .Values.cgw.replicas | int }};
               while [ "$i" -lt "$end" ]; do
                depstatusCode=0;
                while [[ $depstatusCode -ne 200 && $depstatusCode -ne 401 ]]; do
                  depstatusCode=$(curl -ks -o /dev/null -w '%{http_code}'  --cert-type P12 --cert /home/opc/siebelkeystore.p12:$PASSWORD https://siebelcgw-$i.siebel-cgw.{{ .Release.Namespace }}.svc.cluster.local:4430/siebel/v1.0/cloudgateway/heartbeat);
                  echo \"depstatusCode = \" $depstatusCode;
                  sleep 10;
                done
                i=$((i + 1))
              done
      restartPolicy: Never
      {{- include "siebel.imagePullSecrets" . | nindent 6 }}
      volumes:
        - name: keystore
          secret:
            defaultMode: 420
            secretName: keystore
        - name: persist-storage
          persistentVolumeClaim:
            claimName: fsspvc-persist
            readOnly: false
        - name: tns-admin
          secret:
            secretName: tns-secret
        {{- $files := .Files }}
        {{- $root := . -}}
        {{- range $key, $value := .Files }}
        {{- if hasPrefix "paramconfig/" $key }}
        - name: {{ $key | trimPrefix "paramconfig/"  | trimSuffix ".yaml" | replace "_" "-" }}
          configMap:
            name: {{ $key | trimPrefix "paramconfig/"  | trimSuffix ".yaml" | replace "_" "-" }}
        {{- end }}
        {{- end }}

      securityContext:
        fsGroup: 1000
