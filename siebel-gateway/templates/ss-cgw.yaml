#CGW kubernetes yaml
---
apiVersion: v1
kind: Service
metadata:
  name: siebel-cgw
  namespace: {{ .Release.Namespace }}
  labels: {{- include "siebel.labels" . | nindent 4 }}
    app.kubernetes.io/component: cgwservice
spec:
  ports:
  - name: tomcat-port
    port: 4430
    protocol: TCP
    targetPort: 4430
  - name: gtwy-port
    port: 8888
    protocol: TCP
    targetPort: 8888
  - name: zkclient-port
    port: 2320
    protocol: TCP
    targetPort: 2320
  - name: leader-port
    port: 2329
    protocol: TCP
    targetPort: 2329
  - name: follower-port
    port: 2328
    protocol: TCP
    targetPort: 2328
  {{- if .Values.monitoring.enableMonitoring }}
  - name: jmx-metrics
    port: 8088
    protocol: TCP
    targetPort: 8088
  {{- end }}
  clusterIP: None
  selector: {{- include "siebel.selectorLabels" . | nindent 4 }}
    app.siebel.tier: cgw
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: StatefulSet
metadata:
  name: siebelcgw
  labels: {{- include "siebel.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{- include "siebel.selectorLabels" . | nindent 6 }}
      app.siebel.tier: cgw
  serviceName: siebel-cgw
  replicas: {{ .Values.cgw.replicas }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels: {{- include "siebel.labels" . | nindent 8 }}
        app.siebel.tier: cgw
    spec:
      {{- if .Values.cgw.affinity }}
      affinity: {{ .Values.cgw.affinity | toYaml | nindent 8 }}
      {{- end }}
      containers:
        - image: {{ template "siebel.image" . }}
          imagePullPolicy: {{ .Values.image.siebel.imagePullPolicy | default "IfNotPresent" }}
          name: cgw
          ports:
          - containerPort: 4430
            name: tomcat-port
          - containerPort: 2320
            name: gtwy-port
          - containerPort: 8888
            name: agent
          - containerPort: 2320
            name: zkclient-port
          - containerPort: 8888
            name: agent-port
          - containerPort: 2328
            name: follower-port
          - containerPort: 2329
            name: leader-port
          {{- if .Values.monitoring.enableMonitoring }}
          - containerPort: 8088
            name: jmx-metrics
          {{- end }}
          volumeMounts:
          - name: persist-storage
            mountPath: /persistent
            subPath: {{ .Release.Namespace | upper }}/CGW
          - name: keystore
            mountPath: /siebel/mde/applicationcontainer_internal/siebelcerts/truststore.jks
            subPath: truststore.jks
          - name: keystore
            mountPath: /siebel/mde/applicationcontainer_internal/siebelcerts/keystore.jks
            subPath: keystore.jks
          - name: keystore
            mountPath: /siebel/mde/tls_certs/ca.cert.pem
            subPath: ca.cert.pem
          - name: keystore
            mountPath: /siebel/mde/tls_certs/ca.key.pem
            subPath: ca.key.pem
          - name: keystore
            mountPath: /siebel/mde/tls_certs/server.pem
            subPath: server.pem
{{- range $index, $val := .Values.storage }}
          - name: sfs-storage-{{ $index }}
            mountPath: /sfs{{ $index }}
            subPath: {{ $.Release.Namespace | upper }}/FS
{{- end }}
          - name: tns-secret
            mountPath: /tnsadmin
          {{- if .Values.ldap.enable_ssl }}
          - name: ldap-wallet
            mountPath: /siebel/mde/applicationcontainer_internal/siebelcerts/ewallet.p12
            subPath: ewallet.p12
          {{- end }}
          {{- if .Values.monitoring.enableMonitoring }}
          - name: prometheus-jmx-config
            mountPath: /config/prometheus-jmx-config.yaml
            subPath: prometheus-jmx-config.yaml
          {{- end }}
          env:
          {{- if .Values.monitoring.enableMonitoring }}
          - name: JMX_OPTS
            value: "-javaagent:/config/jmx_prometheus_javaagent-0.20.0.jar=8088:/config/prometheus-jmx-config.yaml"
          {{- end }}
          {{- if .Values.cgw.envlist }}
          {{ .Values.cgw.envlist | toYaml | nindent 10 }}
          {{- end }}
          - name: containerMode
            value: "CGW"
          - name: SBL_HEAP_OPTS
            value: "-Xms500m -Xmx4G"
          - name: TNS_ADMIN
            value: "/tnsadmin"
          livenessProbe: {{ .Values.cgwLivenessProbe | toYaml | nindent 12 }}
          resources: {{ .Values.cgwResources | toYaml | nindent 12 }}
          securityContext:
            runAsUser: 1000
        {{- if .Values.logging.enableLogging }}
        - image: {{ template "loggingCollector.image" . }}
          name: log-collector
          imagePullPolicy: {{ .Values.logging.image.imagePullPolicy | default "IfNotPresent" }}
          terminationMessagePolicy: FallbackToLogsOnError
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NODE_NAME
            valueFrom:
               fieldRef:
                 fieldPath: spec.nodeName
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: POD_SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: FLUENTD_ARGS
            value: "-c /etc/fluent/fluent.conf"
          - name:  FLUENT_FORWARD_HOST
            value: {{ .Values.logging.aggregatorInfo.svcName }}.{{ .Release.Namespace }}.svc.cluster.local
          - name:  FLUENT_FORWARD_PORT
            value: "{{ .Values.logging.aggregatorInfo.portNo }}"
          resources: {{ .Values.logging.logCollectorResources | toYaml | nindent 12 }}
          volumeMounts:
          {{- include "logging.cgwFluentdConfVolume" . | nindent 10 }}
          {{- include "logging.logFormat1Volume" . | nindent 10 }}
          {{- include "logging.logFormat2Volume" . | nindent 10 }}
          {{- include "logging.logFormat3Volume" . | nindent 10 }}
          {{- include "logging.logFormat4Volume" . | nindent 10 }}
          {{- include "logging.cfgToolsFormatVolume" . | nindent 10 }}
          {{- include "logging.logFilterVolume" . | nindent 10 }}
          {{- include "logging.logForwarderVolume" . | nindent 10 }}
          - name: persist-storage
            mountPath: /persistent
            subPath: {{ .Release.Namespace | upper }}/CGW
        {{- end }}
      initContainers:
        - name: persist-folders
          imagePullPolicy: {{ .Values.image.busybox.imagePullPolicy | default "IfNotPresent" }}
          image: {{ template "busybox.image" . }}
          command:
            - sh
            - -c
            - mkdir -p /work-dir/{{ .Release.Namespace | upper }}/CGW;
              chown -R 1000:1000 /work-dir/{{ .Release.Namespace | upper }}/CGW;
          volumeMounts:
          - name: persist-storage
            mountPath: "/work-dir"
      {{- include "siebel.imagePullSecrets" . | nindent 6 }}
      volumes:
{{- range $index, $val := .Values.storage }}
        - name: sfs-storage-{{ $index }}
          persistentVolumeClaim:
            claimName: fsspvc-sfs-{{ $index }}
            readOnly: false
{{- end }}
        {{- if .Values.ldap.enable_ssl }}
        - name: ldap-wallet
          secret:
            defaultMode: 420
            secretName: ldap-wallet
        {{- end }}
        - name: persist-storage
          persistentVolumeClaim:
            claimName: fsspvc-persist
            readOnly: false
        - name: tns-secret
          secret:
            defaultMode: 420
            secretName: tns-secret
        - name: keystore
          secret:
            defaultMode: 420
            secretName: keystore
        {{- if .Values.logging.enableLogging }}
        - name: log-collector-config-volume
          configMap:
            name: log-collector-config
        {{ end }}
        {{- if .Values.monitoring.enableMonitoring }}
        - name: prometheus-jmx-config
          configMap:
            name: prometheus-jmx-config
        {{- end }}
      securityContext:
        fsGroup: 1000
