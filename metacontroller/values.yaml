rbac:
  create: true

image:
  registry: phx.ocir.io
  repository: siebeldev/cm/metacontroller
  pullPolicy: IfNotPresent
  tag: "v4.11.5"
imagePullSecrets:
  - name: ocirsecret
nameOverride: ""
namespaceOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 65532

securityContext:
   readOnlyRootFilesystem: true
   runAsNonRoot: true
   runAsUser: 65532
  # capabilities:
  #   drop:
  #   - ALL


resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Command which is used to start metacontroller
command: "/usr/bin/metacontroller"

# Command arguments which are used to start metacontroller
commandArgs:
  - --zap-log-level=4
  - --discovery-interval=20s
  - --cache-flush-interval=30m
  - --health-probe-bind-address=:8081

probes:
  port: 8081

# The name of the PriorityClass that will be assigned to metacontroller
priorityClassName: ""

clusterRole:
  aggregationRule: {}
  rules:
  - apiGroups:
      - "*"
    resources:
      - "*"
    verbs:
      - "*"

replicas: 1

# podDisruptionBudget which can be enabled when running more than one replica
podDisruptionBudget: {}
  # minAvailable: 1
  # maxUnavailable: 0


service:
  enabled: false
  ports: []
#    - name: "metrics"
#      port: 9999
#      protocol: "TCP"
#      targetPort: "metrics"
